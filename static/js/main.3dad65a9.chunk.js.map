{"version":3,"sources":["firebase.js","StateProvider.js","Chat.js","SidebarChat.js","Sidebar.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chat","useState","seed","setSeed","input","setInput","roomId","useParams","roomName","setRoomName","messages","setMessages","user","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","className","Avatar","src","Date","length","timestamp","toDate","toUTCString","IconButton","message","displayName","onChange","e","target","type","placeholder","onClick","preventDefault","console","log","add","FieldValue","serverTimestamp","SidebarChat","id","addNewChat","prompt","to","Sidebar","rooms","setRooms","unsubscribe","photoURL","room","actionTypes","state","action","Login","dispatch","alt","Button","variant","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dad65a9.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDyCh650E6JyWQyjXpUAcpxKk2MqQN-fq4\",\r\n    authDomain: \"wapp-clone-816fc.firebaseapp.com\",\r\n    projectId: \"wapp-clone-816fc\",\r\n    storageBucket: \"wapp-clone-816fc.appspot.com\",\r\n    messagingSenderId: \"93442793908\",\r\n    appId: \"1:93442793908:web:5be157f01cd84d24ec92e1\",\r\n    measurementId: \"G-LM8BXPGNW9\"\r\n  };\r\n  \r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export { auth, provider};\r\n  export default db;","import React, {createContext, useContext, useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\nexport const StateProvider = ({\r\n    reducer, initialState, children}) => (\r\n        <StateContext.Provider value = {useReducer(reducer, initialState)}>\r\n            {children}\r\n        </StateContext.Provider>\r\n    );\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import { Avatar, IconButton } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Chat.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from \"firebase\";\r\n\r\nfunction Chat() {\r\n\r\n    const [seed, setSeed] = useState('');\r\n    const [input, setInput] = useState('');\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{  user  }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection('rooms').doc(roomId)\r\n                .onSnapshot(snapshot => (\r\n                    setRoomName(snapshot.data().name)\r\n                ));\r\n\r\n            db.collection(\"rooms\").doc(roomId).collection(\"messages\")\r\n                .orderBy(\"timestamp\", 'asc').onSnapshot((snapshot) =>\r\n                    setMessages(snapshot.docs.map((doc) => doc.data())));\r\n        }\r\n\r\n    }, [roomId])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, [roomId])\r\n\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"You typed >>>>>>\", input);\r\n\r\n        db.collection(\"rooms\").doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n\r\n        setInput('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat_header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n\r\n                <div className=\"chat_headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>\r\n                        last seen{\" \"}\r\n                        {new Date(messages[messages.length -1]?.timestamp?.toDate()).toUTCString()}\r\n                    </p>\r\n                </div>\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton><SearchIcon /></IconButton>\r\n                    <IconButton><AttachFileIcon /></IconButton>\r\n                    <IconButton><MoreVertIcon /></IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat_body\">\r\n                {messages.map((message) => (\r\n                    <p className={`chat_message ${message.name === user.displayName && 'chat_receiver'} `}>\r\n                        <span className=\"chat_name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat_timestamp\">\r\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                        </span>\r\n                    </p>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat_footer\">\r\n                <IconButton><InsertEmoticonIcon /></IconButton>\r\n                <form>\r\n                    <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\" />\r\n                    <button onClick={sendMessage} type=\"submit\" >Send a message</button>\r\n                </form>\r\n                <IconButton><MicIcon /></IconButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat","import \"./SidebarChat.css\";\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport db from './firebase.js';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n\r\n    const [seed, setSeed] = useState('');\r\n    const [messages, setMessages] = useState('');\r\n\r\n    useEffect(() =>{\r\n        if(id) {\r\n            db.collection(\"rooms\").doc(id).collection('messages')\r\n            .orderBy(\"timestamp\", 'desc')\r\n            .onSnapshot((snapshot) => (\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            ));\r\n        }\r\n    }, [id]);\r\n\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, [])\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please enter name for chat room\");\r\n        if (roomName) {\r\n            // do some clever database stuff\r\n            db.collection('rooms').add({\r\n                name: roomName,\r\n            });\r\n        }\r\n    };\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className=\"sidebarChat\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                <div className=\"sidebarChat_info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{messages[0]?.message}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    ) : (\r\n            <div onClick={createChat} className=\"sidebarChat\">\r\n                <h2>Add new Chat</h2>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default SidebarChat","import React, { useEffect, useState } from 'react'\r\nimport './Sidebar.css'\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('rooms').onSnapshot(snapshot => (\r\n            setRooms(snapshot.docs.map(doc =>({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            })))\r\n        ));\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <Avatar src={user?.photoURL} />\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton><DonutLargeIcon /></IconButton>\r\n                    <IconButton><ChatIcon /></IconButton>\r\n                    <IconButton><MoreVertIcon /></IconButton>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                    <SearchIcon />\r\n                    <input type=\"text\" placeholder=\"Search or start a new chat\" />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"sidebar_chats\">\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map(room =>(\r\n                    <SidebarChat key={room.id} id={room.id}\r\n                    name={room.data.name} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","export const initialState = {\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER : \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport './Login.css';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { auth, provider } from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\n\r\nfunction Login() {\r\n\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n            .then((result) => {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                })\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/598px-WhatsApp.svg.png\" alt=\"\" />\r\n                <div className=\"login_text\">\r\n                    <h1>Sign in to WhatsApp</h1>\r\n                </div>\r\n                <Button variant=\"contained\"  type=\"submit\" onClick={signIn} >Sign in with Google</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import './App.css';\r\nimport Chat from './Chat';\r\nimport Sidebar from './Sidebar';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Login from './Login';\r\nimport { useStateValue } from './StateProvider';\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  return (\r\n    // BEM naming convention\r\n    <div className=\"app\">\r\n\r\n      {!user ? (\r\n        <Login/>\r\n      ) : (\r\n          <div className=\"app_body\">\r\n            <Router>\r\n              <Sidebar />\r\n              <Switch>\r\n                <Route path=\"/rooms/:roomId\">\r\n                  <Chat />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Chat />\r\n                </Route>\r\n              </Switch>\r\n            </Router>\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider\n     initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}